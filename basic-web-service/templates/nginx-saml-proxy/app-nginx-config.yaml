{{- if .Values.ingress.saml.enabled -}}
{{- $appName := include "web-service.name" . }}
{{- $probeLocations := include "web-service.probeNginxLocations" . }}
{{- $proxyPassHost := printf "http://localhost:%v" .Values.ports.containerHttpPort }}

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $appName }}-nginx-configmap
  namespace: default
  labels:
    {{- include "web-service.labels" . | nindent 4 }}
data:
  proxy.conf: |
    proxy_set_header Host $host:$server_port;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

  server.conf: |
    proxy_cache_path /my_cache levels=1:2 keys_zone=my_cache:10m max_size=100m
                 inactive=128m use_temp_path=off;

    server {
      listen {{ .Values.service.port }};

      {{- if include "web-service.probesEnabled" . }}
      location {{ $probeLocations }} {
        proxy_pass {{ $proxyPassHost }};
        include /etc/nginx/conf.d/proxy.conf;
      }
      {{- end }}

      {{- $groupId := .Values.ingress.saml.gwsGroupId -}}
      {{- range .Values.ingress.saml.entryPoints }}
      location {{ . }} {
        {{- if $groupId }}
        auth_request /saml/status/group/{{ $groupId }};
        {{- else }}
        auth_request /saml/status;
        {{- end }}
        auth_request_set $auth_user $upstream_http_x_saml_user;
        auth_request_set $auth_groups $upstream_http_x_saml_groups;
        error_page 401 = @login_required;
        proxy_cache my_cache;
        proxy_cache_valid 200 60m;
        proxy_cache_valid 404 10m;
        proxy_set_header X-Forwarded-User $auth_user;
        proxy_set_header X-Forwarded-Groups $auth_groups;
        proxy_pass {{ $proxyPassHost }};
        include /etc/nginx/conf.d/proxy.conf;
      }
      {{- end }}

      location /saml/ {
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Prefix /saml/;
        {{- if .Values.ingress.saml.entityId }}
        proxy_set_header X-Saml-Entity-Id {{ .Values.ingress.saml.entityId }};
        {{- end }}
        proxy_set_header X-Saml-Acs {{ .Values.ingress.saml.acs }};
        proxy_pass {{ .Values.ingress.saml.proxyHost }}/;
        recursive_error_pages on;
        error_page 301 302 303 307 308 @handle_redirect;
      }

      location @handle_redirect {
        set $redirect_url $upstream_http_location;
        proxy_pass $redirect_url;
      }

      location @login_required {
        return 302 https://$http_host/saml/login$request_uri;
      }
    }

{{- end}}
