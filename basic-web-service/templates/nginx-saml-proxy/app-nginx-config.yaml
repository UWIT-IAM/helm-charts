{{- if .Values.ingress.saml.enabled -}}
{{- $appName := include "web-service.name" . -}}
{{- $probeLocations := include "web-service.probeNginxLocations" . -}}
{{- $proxyPassHost := printf "http://localhost:%v/" .Values.ports.containerHttpPort }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ $appName }}-nginx-configmap
  namespace: default
  labels:
    app: {{ $appName }}
data:
  server.conf: |
    proxy_cache_path /my_cache levels=1:2 keys_zone=my_cache:10m max_size=100m
                 inactive=128m use_temp_path=off;

    server {
      listen {{ .Values.service.port }};

      {{- if include "web-service.probesEnabled" . }}
      location {{ $probeLocations }} {
        proxy_pass {{ $proxyPassHost }}
      }
      {{- end }}

      location / {
        {{- if .Values.ingress.saml.gwsGroupId }}
        auth_request /saml/status/group/{{ .Values.ingress.saml.gwsGroupId }};
        {{- end }}
        error_page 401 = @login_required;
        proxy_cache my_cache;
        proxy_cache_valid 200 60m;
        proxy_cache_valid 404 10m;
        proxy_pass {{ $proxyPassHost }}
      }

      location /saml/ {
        proxy_set_header Host $http_host;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Prefix /saml/;
        proxy_pass {{ .Values.ingress.saml.proxyHost }}/;
      }

      location @login_required {
        return 302 https://$http_host/saml/login$request_uri;
      }
    }
{{- end}}
