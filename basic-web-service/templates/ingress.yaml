{{- if .Values.ingress.enabled -}}
{{- $svcPort := .Values.service.port }}
{{- $tlsEnabled := .Values.ingress.tls }}
{{- $appHost := include "web-service.appHost" . }}
{{- $tlsSecretName := include "web-service.defaultTlsSecretName" . }}
{{- $appName := include "web-service.name" . }}

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: {{ $appName }}
  labels:
    {{- include "web-service.labels" . | nindent 4 }}
  annotations:
    kubernetes.io/ingress.class: nginx
    {{- if $tlsEnabled }}
    cert-manager.io/cluster-issuer: letsencrypt
    {{- end }}
    {{- with .Values.ingress.annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if $tlsEnabled }}
  tls:
    - hosts:
      {{- if .Values.ingress.hosts }}
      {{- range .Values.ingress.hosts }}
      {{- if .tls | default true }}
      - {{ .host | quote }}
      {{- end }}
      {{- end -}}
      {{- else }}
      - {{ $appHost }}
      {{- end }}
      secretName: {{ $tlsSecretName }}
  {{- end }}
  rules:
    {{- if .Values.ingress.hosts }}
      {{- range .Values.ingress.hosts }}
      - host: {{ .host }}
        http:
          paths:
            - path: {{ .path | default "/" | quote }}
              pathType: {{ .pathType | default "Prefix" | quote }}
              backend:
                service:
                  name: {{ .service | default $appName }}
                  port:
                    number: {{ .port | default $svcPort }}
      {{- end }}
    {{- else }}
      - host: {{ $appHost }}
        http:
          paths:
            path: "/"
            pathType: Prefix
            backend:
              service:
                name: {{ $appName }}
                port:
                  number: {{ $svcPort }}
    {{- end -}}
{{- end -}}
